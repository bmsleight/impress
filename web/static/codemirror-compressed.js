CodeMirror.defineMode("rst-base",function(a){function b(a){var b=Array.prototype.slice.call(arguments,1);return a.replace(/{(\d+)}/g,function(a,c){return b[c]!==void 0?b[c]:a})}function c(a){this.message=a}function d(a,b){if(!a)throw new c(b);return a}function Q(a,b){var c=null;if(a.sol()&&a.match(P,!1))X(b,V,{mode:e,local:e.startState()});else if(a.sol()&&a.match(r))X(b,R),c="meta";else if(a.sol()&&a.match(q))X(b,Q),c="header";else if(Z(b)==C||a.match(C,!1))switch(Y(b)){case 0:X(b,Q,W(C,1)),d(a.match(/^:/)),c="meta";break;case 1:X(b,Q,W(C,2)),d(a.match(k)),c="keyword",a.current().match(/^(?:math|latex)/)&&(b.tmp={mode:f,local:f.startState()});break;case 2:X(b,Q,W(C,3)),d(a.match(/^:`/)),c="meta";break;case 3:if(b.tmp){if("`"==a.peek()){X(b,Q,W(C,4)),b.tmp=void 0;break}c=b.tmp.mode.token(a,b.tmp.local);break}X(b,Q,W(C,4)),d(a.match(p)),c="string";break;case 4:X(b,Q,W(C,5)),d(a.match(/^`/)),c="meta";break;case 5:X(b,Q,W(C,6)),d(a.match(i));break;default:X(b,Q),d(""==a.current())}else if(Z(b)==D||a.match(D,!1))switch(Y(b)){case 0:X(b,Q,W(D,1)),d(a.match(/^`/)),c="meta";break;case 1:X(b,Q,W(D,2)),d(a.match(p)),c="string";break;case 2:X(b,Q,W(D,3)),d(a.match(/^`:/)),c="meta";break;case 3:X(b,Q,W(D,4)),d(a.match(k)),c="keyword";break;case 4:X(b,Q,W(D,5)),d(a.match(/^:/)),c="meta";break;case 5:X(b,Q,W(D,6)),d(a.match(i));break;default:X(b,Q),d(""==a.current())}else if(Z(b)==E||a.match(E,!1))switch(Y(b)){case 0:X(b,Q,W(E,1)),d(a.match(/^:/)),c="meta";break;case 1:X(b,Q,W(E,2)),d(a.match(k)),c="keyword";break;case 2:X(b,Q,W(E,3)),d(a.match(/^:/)),c="meta";break;case 3:X(b,Q,W(E,4)),d(a.match(i));break;default:X(b,Q),d(""==a.current())}else if(Z(b)==x||a.match(x,!1))switch(Y(b)){case 0:X(b,Q,W(x,1)),d(a.match(H)),c="variable-2";break;case 1:X(b,Q,W(x,2)),a.match(/^_?_?/)&&(c="link");break;default:X(b,Q),d(""==a.current())}else if(a.match(y))X(b,Q),c="quote";else if(a.match(z))X(b,Q),c="quote";else if(a.match(A))X(b,Q),(!a.peek()||a.peek().match(/^\W$/))&&(c="link");else if(Z(b)==B||a.match(B,!1))switch(Y(b)){case 0:!a.peek()||a.peek().match(/^\W$/)?X(b,Q,W(B,1)):a.match(B);break;case 1:X(b,Q,W(B,2)),d(a.match(/^`/)),c="link";break;case 2:X(b,Q,W(B,3)),d(a.match(p));break;case 3:X(b,Q,W(B,4)),d(a.match(/^`_/)),c="link";break;default:X(b,Q),d(""==a.current())}else a.match(O)?X(b,T):a.next()&&X(b,Q);return c}function R(a,b){var c=null;if(Z(b)==u||a.match(u,!1))switch(Y(b)){case 0:X(b,R,W(u,1)),d(a.match(H)),c="variable-2";break;case 1:X(b,R,W(u,2)),d(a.match(I));break;case 2:X(b,R,W(u,3)),d(a.match(J)),c="keyword";break;case 3:X(b,R,W(u,4)),d(a.match(K)),c="meta";break;default:X(b,Q),d(""==a.current())}else if(Z(b)==t||a.match(t,!1))switch(Y(b)){case 0:X(b,R,W(t,1)),d(a.match(F)),c="keyword",a.current().match(/^(?:math|latex)/)?b.tmp_stex=!0:a.current().match(/^python/)&&(b.tmp_py=!0);break;case 1:X(b,R,W(t,2)),d(a.match(G)),c="meta";break;default:a.match(/^latex\s*$/)||b.tmp_stex?(b.tmp_stex=void 0,X(b,V,{mode:f,local:f.startState()})):a.match(/^python\s*$/)||b.tmp_py?(b.tmp_py=void 0,X(b,V,{mode:e,local:e.startState()})):(X(b,Q),d(""==a.current()))}else if(Z(b)==s||a.match(s,!1))switch(Y(b)){case 0:X(b,R,W(s,1)),d(a.match(L)),d(a.match(M)),c="link";break;case 1:X(b,R,W(s,2)),d(a.match(N)),c="meta";break;default:X(b,Q),d(""==a.current())}else a.match(v)?(X(b,Q),c="quote"):a.match(w)?(X(b,Q),c="quote"):(a.eatSpace(),a.eol()?X(b,Q):(a.skipToEnd(),X(b,S),c="comment"));return c}function S(a,b){return U(a,b,"comment")}function T(a,b){return U(a,b,"meta")}function U(a,b,c){return a.eol()||a.eatSpace()?(a.skipToEnd(),c):(X(b,Q),null)}function V(a,b){if(b.ctx.mode&&b.ctx.local){if(a.sol())return a.eatSpace()||X(b,Q),null;try{return b.ctx.mode.token(a,b.ctx.local)}catch(c){return X(b,Q),null}}return X(b,Q),null}function W(a,b,c,d){return{phase:a,stage:b,mode:c,local:d}}function X(a,b,c){a.tok=b,a.ctx=c||{}}function Y(a){return a.ctx.stage||0}function Z(a){return a.ctx.phase}c.prototype.toString=function(){return"AssertException: "+this.message};var e=CodeMirror.getMode(a,"python"),f=CodeMirror.getMode(a,"stex"),g="\\s+",h="(?:\\s*|\\W|$)",i=RegExp(b("^{0}",h)),j="(?:[^\\W\\d_](?:[\\w\\+\\.\\-:]*[^\\W_])?)",k=RegExp(b("^{0}",j)),l="(?:[^\\W\\d_](?:[\\w\\s\\+\\.\\-:]*[^\\W_])?)",m=b("(?:{0}|`{1}`)",j,l),n="(?:[^\\s\\|](?:[^\\|]*[^\\s\\|])?)",o="(?:[^\\`]+)",p=RegExp(b("^{0}",o)),q=RegExp("^([!'#$%&\"()*+,-./:;<=>?@\\[\\\\\\]^_`{|}~])\\1{3,}\\s*$"),r=RegExp(b("^\\.\\.{0}",g)),s=RegExp(b("^_{0}:{1}|^__:{1}",m,h)),t=RegExp(b("^{0}::{1}",m,h)),u=RegExp(b("^\\|{0}\\|{1}{2}::{3}",n,g,m,h)),v=RegExp(b("^\\[(?:\\d+|#{0}?|\\*)]{1}",m,h)),w=RegExp(b("^\\[{0}\\]{1}",m,h)),x=RegExp(b("^\\|{0}\\|",n)),y=RegExp(b("^\\[(?:\\d+|#{0}?|\\*)]_",m)),z=RegExp(b("^\\[{0}\\]_",m)),A=RegExp(b("^{0}__?",m)),B=RegExp(b("^`{0}`_",o)),C=RegExp(b("^:{0}:`{1}`{2}",j,o,h)),D=RegExp(b("^`{1}`:{0}:{2}",j,o,h)),E=RegExp(b("^:{0}:{1}",j,h)),F=RegExp(b("^{0}",m)),G=RegExp(b("^::{0}",h)),H=RegExp(b("^\\|{0}\\|",n)),I=RegExp(b("^{0}",g)),J=RegExp(b("^{0}",m)),K=RegExp(b("^::{0}",h)),L=RegExp("^_"),M=RegExp(b("^{0}|_",m)),N=RegExp(b("^:{0}",h)),O=RegExp("^::\\s*$"),P=RegExp("^\\s+(?:>>>|In \\[\\d+\\]:)\\s");return{startState:function(){return{tok:Q,ctx:W(void 0,0)}},copyState:function(a){return{tok:a.tok,ctx:a.ctx}},innerMode:function(a){return{state:a.ctx.local,mode:a.ctx.mode}},token:function(a,b){return b.tok(a,b)}}},"python","stex"),CodeMirror.defineMode("rst",function(a,b){var c="[Hh][Tt][Tt][Pp][Ss]?://",d="(?:[\\d\\w.-]+)\\.(?:\\w{2,6})",e="(?:/[\\d\\w\\#\\%\\&\\-\\.\\,\\/\\:\\=\\?\\~]+)*",f=RegExp("^"+c+d+e),g=/^\*\*[^\*\s](?:[^\*]*[^\*\s])?\*\*(\s+|$)/,h=/^[^\*]\*[^\*\s](?:[^\*]*[^\*\s])?\*(\s+|$)/,i=/^``[^`\s](?:[^`]*[^`\s])``(\s+|$)/,j=/^(?:[\d]+(?:[\.,]\d+)*)/,k=/^(?:\s\+[\d]+(?:[\.,]\d+)*)/,l=/^(?:\s\-[\d]+(?:[\.,]\d+)*)/,m={token:function(a){if(a.match(f))return"link";if(a.match(g))return"strong";if(a.match(h))return"em";if(a.match(i))return"string-2";if(a.match(j))return"number";if(a.match(k))return"positive";if(a.match(l))return"negative";for(;!(null==a.next()||a.match(f,!1)||a.match(g,!1)||a.match(h,!1)||a.match(i,!1)||a.match(j,!1)||a.match(k,!1)||a.match(l,!1)););return null}},n=CodeMirror.getMode(a,b.backdrop||"rst-base");return CodeMirror.overlayMode(n,m,!0)},"python","stex"),CodeMirror.defineMIME("text/x-rst","rst");
